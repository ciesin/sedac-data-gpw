# Clean GPW Share
# Delete Intermediate files generated by grid_preprocess
# List of Intermediate Files

# Kytt MacManus
# January 5, 2014

# Import Libraries
import arcpy, os
import datetime
startTime = datetime.datetime.now()
# Define Workspace Variable
workspace = r'\\Dataserver0\gpw\GPW4\Gridding\country\inputs'

# Assign workspace environment for ArcPy
arcpy.env.workspace = workspace

# List GDBs in workspace environment
gdbs = arcpy.ListWorkspaces("*","FILEGDB")
gdbs.sort()
# Iterate the list
for gdb in gdbs:
    # get ISO code for name parsing
    iso = os.path.basename(gdb)[:-4]
##    print "processing " + iso
    # Assign workspace environment for ArcPy
    # So that we can use shorthand to refer to
    # files located in that database
    arcpy.env.workspace = gdb
    ## Create List of Delete Fields
    # First define variables
    # Because the names of the files will differ depending on
    # the administrative level used for the country, we need to
    # grab the value of the input boundaries
    inBoundariesList = arcpy.ListFeatureClasses("*boundaries_2010")
    if len(inBoundariesList)==0:
        print iso
    else:
        inBoundaries = inBoundariesList[0]
        fishv0 = iso + "_fishnet_v0"
        waterAreas = iso + "_water_areas"
        waterAreasProj = iso + "_water_areas_mollweide"
        fishClip = inBoundaries + "_fishnet_clipped"
        fishClipProj = fishClip + "_intersect_projected"
        boundariesProj = inBoundaries + "_mollweide"
        waterMaskClipInt = inBoundaries + "_water_mask_clipped_intersect"
        waterMaskClipIntProj = waterMaskClipInt + "_projected"
        # define the list
        deleteList = [fishv0,waterAreas,waterAreasProj,fishClip,fishClipProj,
                      boundariesProj,waterMaskClipInt,waterMaskClipIntProj]
        # iterate delete list
        for deleteFile in deleteList:
            # if the file exists then delete it, otherwise pass
            if arcpy.Exists(deleteFile):
                try:
                    arcpy.Delete_management(deleteFile)
                    print "Deleted " + deleteFile
                except:
                    print arcpy.GetMessages()
            else:
                pass
    

print datetime.datetime.now() - startTime
